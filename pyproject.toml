[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "wallet"
version = "3.0.0a4"
description = "Personal finance service"
authors = ["Kirill Sumorokov <sumorokov.k@gmail.com>"]
license = "MIT"
packages = [
    { include = "wallet", from = "src" }
]


# Dependencies
[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.8.3"
click = "^8.1.3"
marshmallow = "^3.18.0"
prometheus-client = "^0.14.1"
structlog = "^22.1.0"
ujson = "^5.5.0"
uvloop = "^0.17.0"
flake8 = "^4.0.1"

[tool.poetry.group.dev.dependencies]
coverage = {extras = ["toml"], version = "^7.0.5"}
pytest = "^7.1.3"
pytest-aiohttp = "^1.0.4"
pytest-cov = "^3.0.0"
pytest-mock = "^3.8.2"
pytest-xdist = "^2.5.0"
ruff = "^0.0.222"
types-setuptools = "^65.3.0"
types-ujson = "^5.5.0"
black = "^22.12.0"
mypy = "^0.991"

[tool.poetry.group.debug.dependencies]
debugpy = "^1.6.5"
ipdb = "^0.13.9"
ipython = "^8.5.0"


# Black config
[tool.black]
line-length = 120
target-version = ['py311']


# Coverage config
[tool.coverage.run]
branch = true
data_file = "tests/.coverage"
source = ["src/wallet"]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = "tests/coverage"

# Mypy config
[tool.mypy]
strict = true
python_version = "3.11"

warn_return_any = true
warn_unused_configs = true


# Pytest settings
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov"
asyncio_mode = "auto"
markers = ["unit", "integration"]
norecursedirs = ".tox"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
testpaths = ["tests"]


# Ruff config
[tool.ruff]
ignore = [
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D107", # Missing docstring in __init__
  "PT004"
]
select = [
  "E",    # pycodestyle errors
  "W",    # pycodestyle warnings
  "D",    # pydocstyle
  "F",    # pyflakes
  "C90",  # mccabe
  "C4",   # flake8-comprehensions
  # "B",    # flake8-bugbear
  "Q",    # flake8-quotes
  "T20",  # flake8-print
  "PT",   # flake8-pytest-style
  "RET",  # flake8-return
  "SIM",  # flake8-simplify
  "ERA",  # eradicate
]
exclude = ['.venv']
line-length = 120
respect-gitignore = true
src = ["src", "tests"]
target-version = "py311"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.flake8-pytest-style]
fixture-parentheses = true
mark-parentheses = true

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.isort]
known-first-party = ["wallet", "tests"]
