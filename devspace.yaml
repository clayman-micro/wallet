version: v2beta1
name: wallet

vars:
  APP_NAME: wallet
  IMAGE: ghcr.io/clayman-micro/wallet
  HOSTNAME: wallet.devspace

images:
  app:
    image: ${IMAGE}
    kaniko:
      pullSecret: ghcr

pipelines:
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      create_deployments --all                          # 4. Deploy Helm charts and manifests specfied as "deployments"
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      create_deployments --all     # 3. Deploy Helm charts and manifests specfied as "deployments"
      start_dev app                # 4. Start dev mode "app" (see "dev" section)

      code --folder-uri vscode-remote://ssh-remote+${HOSTNAME}/app

deployments:
  app:
    helm:
      releaseName: ${APP_NAME}
      chart:
        git: https://github.com/clayman-micro/helm-chart.git
        branch: v2.5.0
        subPath: charts/micro
      values:
        image:
          repository: ${IMAGE}

        replicas: 1

        serviceAccount:
          name: micro

        imagePullSecrets:
          - name: ghcr

        migrations:
          enabled: false

        ingress:
          enabled: true

          rules:
            - "Host(`wallet.dev.clayman.pro`)"

        livenessProbe:
          enabled: true

        readinessProbe:
          enabled: true

        resources:
          limits:
            cpu: 1500m
            memory: 2048Mi
          requests:
            cpu: 250m
            memory: 512Mi

dev:
  app:
    imageSelector: ${IMAGE}
    devImage: ghcr.io/clayman-micro/dev-image:master
    command: ["sh", "-c", "tail -f /dev/null"]
    workingDir: /app
    sync:
      - path: ./:/app
        excludePaths:
          - .DS_Store
          - .coverage
          - .dockerignore
          - .eggs
          - .mypy_cache
          - .pytest_cache
          - .ruff_cache
          - .scannerwork
          - .sonarlint
          - .tox
          - .venv
          - '*.egg-info'
          - build
          - dist
          - '**/__pycache__'
    logs:
      enabled: true
    ssh:
      enabled: true
      localHostname: ${HOSTNAME}
    proxyCommands:
      - command: devspace
      - command: git
      - command: helm
      - command: kubectl
      - gitCredentials: true

hooks:
  - command: |-
      /root/.pyenv/bin/pyenv install 3.11.1
      poetry env use /root/.pyenv/versions/3.11.1/bin/python
      poetry install
    container:
      imageSelector: ${IMAGE}
    events: ["after:initialSync:app"]

commands:
  vscode: |-
    code --folder-uri vscode-remote://ssh-remote+${HOSTNAME}/app
