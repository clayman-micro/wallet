---

- hosts: locals
  roles:
    - role: clayman74.digitalocean-provision
      digitalocean_provision_token: "{{ lookup('env', 'DO_TOKEN') }}"
      digitalocean_provision_inventory_group: "{{ groups['cloud'] }}"
      digitalocean_provision_ssh_key: "{{ inventory_hostname }}"


- hosts: cloud

  vars:
    credentials_path: "{{ lookup('env','HOME') }}/.credentials/{{ inventory_hostname }}"

  handlers:
    - name: Restart loadbalancer
      shell: docker restart {{ loadbalancer_container_name }}
      listen: "restart loadbalancer"

  pre_tasks:
    - name: Generate required passwords
      set_fact:
        postgresql_password: "{{ lookup('password', '{{ credentials_path }}/postgresql/password length=20') }}"

        app_sentry_dsn: "{{ lookup('file', '{{ credentials_path }}/{{ app_name }}/sentry_dsn') }}"
        app_secret_key: "{{ lookup('password', '{{ credentials_path }}/{{ app_name }}/secret_key length=32') }}"
        app_postgresql_password: "{{ lookup('password', '{{ credentials_path }}/{{ app_name }}/postgres_password length=20') }}"

    - name: Install required packages
      apt: name="{{ item }}"
      with_items:
        - tmux
        - python-psycopg2

  roles:
    - role: clayman74.consul

    - role: clayman74.loadbalancer
      loadbalancer_networks:
        - name: "{{ network }}"

    - role: clayman74.postgresql

  post_tasks:
    - name: Create app folders
      file: path={{ item }} state=directory
      with_items:
        - "/etc/service/{{ app_name }}_consul_template"
        - "/opt/projects/{{ app_name }}"

    - name: Create app network
      docker_network:
        name: "{{ app_network }}"
        connected:
          - "{{ app_consul_container_name }}"
          - "{{ app_postgresql_container_name }}"
        appends: yes

    - name: Assemble app config
      template:
        src: "templates/config.yml.j2"
        dest: "/opt/projects/{{ app_name }}/config.yml"

    - name: Assemble consul-template config
      template:
        src: "templates/nginx.consul-template.conf.j2"
        dest: "/etc/consul-templates/{{ app_name }}.conf"
      notify: "restart loadbalancer"

    - name: Assemble consul-template service file
      template:
        src: "templates/consul-template.service.j2"
        dest: "/etc/service/{{ app_name }}_consul_template/run"
        mode: "a+x"
      notify: "restart loadbalancer"

    - name: Inspect postgresql container ip address
      shell: "docker inspect --format '{''{ .NetworkSettings.IPAddress }''}' {{ postgresql_container_name }}"
      register: postgresql_container_host

    - name: Create app database user
      postgresql_user:
        name: "{{ app_postgresql_user }}"
        password: "{{ app_postgresql_password }}"
        role_attr_flags: CREATEDB,NOSUPERUSER
        login_host: "{{ postgresql_container_host.stdout }}"
        login_password: "{{ postgresql_password }}"

    - name: Create app database
      postgresql_db:
        name: "{{ app_postgresql_database }}"
        owner: "{{ app_postgresql_user }}"
        encoding: UTF-8
        login_host: "{{ postgresql_container_host.stdout }}"
        login_password: "{{ postgresql_password }}"
