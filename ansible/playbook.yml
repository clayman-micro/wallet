---

- hosts: cloud

  roles:
    - role: clayman74.docker
    - role: clayman74.consul
    - role: clayman74.loadbalancer
    - role: clayman74.postgresql

  post_tasks:
    - name: Create app folders
      file: path={{ item }} state=directory
      with_items:
        - "/etc/service/{{ app['name'] }}_consul_template"

    - name: Assemble consul-template config
      template:
        src: "templates/nginx.consul-template.conf.j2"
        dest: "/etc/consul-templates/{{ app['name'] }}.conf"

    - name: Assemble consul-template service file
      template:
        src: "templates/consul-template.service.j2"
        dest: "/etc/service/{{ app['name'] }}_consul_template/run"
        mode: "a+x"

    - name: Inspect postgresql container ip address
      shell: "docker inspect --format '{''{ .NetworkSettings.IPAddress }''}' {{ postgresql_container_name }}"
      register: postgresql_container_host

    - name: Create app database user
      postgresql_user:
        name: "{{ app['db_user'] }}"
        password: "{{ app['db_password'] }}"
        role_attr_flags: CREATEDB,NOSUPERUSER
        login_host: "{{ postgresql_container_host.stdout }}"
        login_password: "{{ postgresql_password }}"
        encrypted: yes

    - name: Create app database
      postgresql_db:
        name: "{{ app['db_name'] }}"
        owner: "{{ app['db_user'] }}"
        encoding: UTF-8
        login_host: "{{ postgresql_container_host.stdout }}"
        login_password: "{{ postgresql_password }}"

    - name: Pull image
      docker_image:
        name: "{{ app['image'] }}"
        force: yes
      tags:
        - deploy

    - name: Upgrade database schema
      shell: "docker run --rm --net={{ network }} -e PGPASSWORD={{ app['db_password'] }} {{ app['image'] }} psql -h {{ postgresql_container_name }} -d {{ app['db_name'] }} -U {{ app['db_user'] }} -f /usr/share/{{ app['name'] }}/upgrade_schema.sql"
      tags:
        - deploy

    - name: Start app container
      docker_container:
        name: "{{ app['name'] }}_{{ item }}"
        image: "{{ app['image'] }}"
        recreate: yes
        env:
          CONSUL_HOST: "{{ consul_container_name }}"

          DB_HOST: "{{ postgresql_container_name }}"
          DB_NAME: "{{ app['db_name'] }}"
          DB_USER: "{{ app['db_user'] }}"
          DB_PASSWORD: "{{ app['db_password'] }}"

          PASSPORT_DSN: "{{ app['passport_dsn'] }}"
          SECRET_KEY: "{{ app['secret_key'] }}"
          SENTRY_DSN: "{{ app['sentry_dsn'] }}"
        log_driver: journald
        log_options:
          tag: "{{ app['name'] }}"
          labels: "{{ app['name'] }}"
        networks:
          - name: "{{ network }}"
        restart_policy: "always"
        stop_signal: "SIGINT"
      with_sequence: count={{ app['instances'] }}
      tags:
        - deploy
